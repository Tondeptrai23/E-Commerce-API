openapi: 3.0.0

info:
  title: E-commerce API
  description: |
    This API provides endpoints for managing products in an E-commerce system.
  
    [Query Parameters Documentation](https://github.com/Tondeptrai23/E-Commerce-API/blob/main/src/v2/document/docs/query.md)
  
    [Authentication Documentation](https://github.com/Tondeptrai23/E-Commerce-API/blob/main/src/v2/document/docs/auth.md)
  
    [Payment Integration Documentation](http://github.com/Tondeptrai23/e-commerce-api/blob/main/src/v2/document/docs/payment.md)
  version: 2.0.0

servers:
  - url: https://localhost:3000/api/v2

tags:
  - name: Authentication
    description: Endpoints related to user authentication and authorization.

  - name: Reset Password  
    description: Endpoints related to resetting user passwords.

  - name: User Products
    description: Endpoints for managing user-specific product interactions.

  - name: User Categories
    description: Endpoints for managing user-specific category interactions.

  - name: User Cart
    description: Endpoints for managing user shopping carts.

  - name: User Orders
    description: Endpoints for managing user orders.

  - name: User Address
    description: Endpoints for managing user addresses.

  - name: Admin Products
    description: Endpoints for managing product data, variants, images and categories.

  - name: Admin Variants
    description: Endpoints for managing variants.

  - name: Admin Categories
    description: Endpoints for managing categories.

  - name: Admin Coupons
    description: Endpoints for managing discount coupons.

  - name: Admin Attributes
    description: Endpoints for managing attributes.

  - name: Admin Attribute Values
    description: Endpoints for managing attribute values.

  - name: Admin Orders
    description: Endpoints for managing orders.

  - name: Admin Address
    description: Endpoints for managing user addresses.

paths:
  # Customer Journey



  # Authentication
  /auth/signin:
    $ref: ./paths/index.paths.yaml#/signin

  /auth/signup:
    $ref: ./paths/index.paths.yaml#/signup

  /auth/verify:
    $ref: ./paths/index.paths.yaml#/verifyAccount

  /auth/verify/resend:
    $ref: ./paths/index.paths.yaml#/resendVerifyAccount

  /auth/refreshToken:
    $ref: ./paths/index.paths.yaml#/refresh

  /auth/refreshToken/reset:
    $ref: ./paths/index.paths.yaml#/resetToken
    
  /auth/google:
    get:
      tags:
        - Authentication
      summary: Initiate Google OAuth 2.0 flow
      description: Redirects the user to Google's authentication page
      responses:
        '302':
          description: Redirect to Google's auth page

  # Reset Password
  /auth/resetPassword:
    $ref: ./paths/index.paths.yaml#/sendResetPassword

  /auth/resetPassword/verify:
    $ref: ./paths/index.paths.yaml#/verifyPasswordCode

  /auth/resetPassword/reset:
    $ref: ./paths/index.paths.yaml#/resetPassword

  # User Products
  /products:
    $ref: ./paths/index.paths.yaml#/userProducts
  
  /products/{productID}:
    $ref: ./paths/index.paths.yaml#/userProduct

  /products/{productID}/variants:
    $ref: ./paths/index.paths.yaml#/userProductVariants

  /products/{productID}/images:
    $ref: ./paths/index.paths.yaml#/userProductImages

  /products/{productID}/categories:
    $ref: ./paths/index.paths.yaml#/userProductCategories

  # User Categories
  /categories:
    $ref: ./paths/index.paths.yaml#/userCategories

  /categories/{categoryName}:
    $ref: ./paths/index.paths.yaml#/userCategory

  /categories/{categoryName}/ascendants:
    $ref: ./paths/index.paths.yaml#/userAscendantCategories

  /categories/{categoryName}/descendants:
    $ref: ./paths/index.paths.yaml#/userDescendantCategories

  # User Cart
  /cart:
    $ref: ./paths/index.paths.yaml#/userCart
    
  /cart/{variantID}:
    $ref: ./paths/index.paths.yaml#/userCartItemsVariant

  # User Order
  /orders:
    $ref: ./paths/index.paths.yaml#/userOrders
  
  /orders/{orderID}:
    $ref: ./paths/index.paths.yaml#/userOrder
  
  /orders/pending:
    $ref: ./paths/index.paths.yaml#/userPendingOrder

  /orders/pending/coupons:
    $ref: ./paths/index.paths.yaml#/userPendingCoupon

  # User Address
  /address:
    $ref: ./paths/index.paths.yaml#/userAddresses

  /address/{addressID}:
    $ref: ./paths/index.paths.yaml#/userAddress

  # Admin Products
  /admin/products:
    $ref: ./paths/index.paths.yaml#/adminProducts

  /admin/products/{productID}:
    $ref: ./paths/index.paths.yaml#/adminProduct

  # Admin Products Variants

  /admin/products/{productID}/variants:
    $ref: ./paths/index.paths.yaml#/adminProductVariants

  /admin/products/{productID}/variants/{variantID}:
    $ref: ./paths/index.paths.yaml#/adminProductVariant

  # Admin Products Images
  /admin/products/{productID}/images:
    $ref: ./paths/index.paths.yaml#/adminProductImages

  /admin/products/{productID}/images/{imageID}:
    $ref: ./paths/index.paths.yaml#/adminProductImage

  # Admin Products Categories

  /admin/products/{productID}/categories:
    $ref: ./paths/index.paths.yaml#/adminProductCategories

  /admin/products/{productID}/categories/{categoryName}:
    $ref: ./paths/index.paths.yaml#/adminProductCategory

  # Admin Variants

  /admin/variants:
    $ref: ./paths/index.paths.yaml#/adminVariants

  /admin/variants/{variantID}:
    $ref: ./paths/index.paths.yaml#/adminVariant

  /admin/variants/{variantID}/quantity:
    $ref: ./paths/index.paths.yaml#/adminVariantQuantity

  # Admin Categories

  /admin/categories:
    $ref: ./paths/index.paths.yaml#/adminCategories

  /admin/categories/{categoryName}:
    $ref: ./paths/index.paths.yaml#/adminCategory

  # Admin Coupons

  /admin/coupons:
    $ref: ./paths/index.paths.yaml#/adminCoupons

  /admin/coupons/{couponID}:
    $ref: ./paths/index.paths.yaml#/adminCoupon

  /admin/coupons/{couponID}/categories:
    $ref: ./paths/index.paths.yaml#/adminCouponCategories

  /admin/coupons/{couponID}/categories/{categoryName}:
    $ref: ./paths/index.paths.yaml#/adminCouponCategory

  /admin/coupons/{couponID}/products:
    $ref: ./paths/index.paths.yaml#/adminCouponProducts

  /admin/coupons/{couponID}/products/{productID}:
    $ref: ./paths/index.paths.yaml#/adminCouponProduct

  # Admin Attributes

  /admin/attributes:
    $ref: ./paths/index.paths.yaml#/adminAttributes

  /admin/attributes/{attributeID}:
    $ref: ./paths/index.paths.yaml#/adminAttribute

  /admin/attributes/{attributeID}/variants:
    $ref: ./paths/index.paths.yaml#/adminAttributeVariants


  # Admin Attribute Values:
  /admin/attributesValues:
    $ref: ./paths/index.paths.yaml#/adminValues

  /admin/attributes/{attributeID}/values:
    $ref: ./paths/index.paths.yaml#/adminAttributeValues

  /admin/attributes/{attributeID}/values/{valueID}:
    $ref: ./paths/index.paths.yaml#/adminAttributeValue

  /admin/attributes/{attributeID}/values/{valueID}/variants:
    $ref: ./paths/index.paths.yaml#/adminAttributeValueVariants
    
  # Admin Users

  /admin/users:
    $ref: ./paths/index.paths.yaml#/adminUsers

  /admin/users/{userID}:
    $ref: ./paths/index.paths.yaml#/adminUser

  /admin/users/{userID}/verify:
    $ref: ./paths/index.paths.yaml#/adminUserVerify

  /admin/users/{userID}/cart:
    $ref: ./paths/index.paths.yaml#/adminUserCart

  # Admin Address

  /admin/users/{userID}/address:
    $ref: ./paths/index.paths.yaml#/adminAddresses

  /admin/users/{userID}/address/{addressID}:
    $ref: ./paths/index.paths.yaml#/adminAddress

  /admin/address/shipping/{shippingAddressID}:
    $ref: ./paths/index.paths.yaml#/adminShippingAddress

  # Admin Orders

  /admin/orders:
    $ref: ./paths/index.paths.yaml#/adminOrders

  /admin/orders/{orderID}:
    $ref: ./paths/index.paths.yaml#/adminOrder

  /admin/orders/{orderID}/status:
    $ref: ./paths/index.paths.yaml#/adminOrderStatus

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    oAuth2:
      description: | 
        OAuth 2.0.
        Access the authorizationUrl below to initiate the OAuth 2.0 flow.
        Or use the client ID and client secret to get the accessToken and refreshToken.
        The accessToken and refreshToken will be returned in the query parameters.
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:3000/api/v2/auth/google
          tokenUrl: http://localhost:3000/api/v2/auth/google/callback
          scopes:
            profile: View user's basic profile
            email: View user's email address

  schemas:
    Error400:
      $ref: ./schemas/error/error400.yaml
    Error401:
      $ref: ./schemas/error/error401.yaml
    Error403:
      $ref: ./schemas/error/error403.yaml
    Error404:
      $ref: ./schemas/error/error404.yaml
    Error500:
      $ref: ./schemas/error/error500.yaml
      
    Product:
      $ref: ./schemas/products/product.yaml
    Variant:
      $ref: ./schemas/products/variant.yaml
    VariantAttribute: 
      $ref: ./schemas/products/variantAttribute.yaml
    Image:
      $ref: ./schemas/products/image.yaml
    CategoryNames:
      $ref: ./schemas/products/categoryNames.yaml
    Category:
      $ref: ./schemas/products/category.yaml
    Attribute:
      $ref: ./schemas/products/attribute.yaml
    AttributeValue:
      $ref: ./schemas/products/value.yaml
    Coupon:
      $ref: ./schemas/shopping/coupon.yaml
    Order:
      $ref: ./schemas/shopping/order.yaml
    User:
      $ref: ./schemas/users/user.yaml
    Address:
      $ref: ./schemas/users/address.yaml