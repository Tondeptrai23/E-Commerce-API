# GET /admin/attributes
tags:
  - Admin Attributes
summary: Retrieve attributes
description: Retrieves a list of available attributes, including their values. <br>
  Supports pagination, filtering, and sorting. <br>
  If `sort` is not provided, the default sort is by `attributeID` in ascending order. <br>
security:
  - bearerAuth: []
parameters:
  - name: page
    in: query
    description: Page to retrieve
    required: false
    schema:
      type: integer

  - name: size
    in: query
    description: Size each page
    required: false
    schema:
      type: integer

  - name: name
    in: query
    description: Filter by name. <br> 
      - Support partial matching using "[like]name"
    required: false
    schema:
      type: string
      example: "[like]color"

  - name: values
    in: query
    description: Filter by values. <br> 
      - Support partial matching using "[like]value"
      - Support multiple values using comma "," <br>
      - Attributes with any of the values will be included
    required: false
    schema:
      type: string
      example: "[like]red,[like]M"

  - name: createdAt
    in: query
    description: Filter by createdAt. <br> 
      - Support operators ([lte], [gte], [between]) <br> 
    required: false
    schema:
      type: string
      example: "[gte]2022-01-01"

  - name: updatedAt
    in: query
    description: Filter by updatedAt. <br> 
      - Support operators ([lte], [gte], [between]) <br> 
    required: false
    schema:
      type: string
      example: "[gte]2022-01-01"

  - name: sort
    in: query
    description: Sort by attributeID, name, or type. <br> 
      - Support multiple sorting using comma ",". <br>
      - Support descending order using "-" prefix <br>
      - Dont support sorting by nested fields
    required: false
    schema:
      type: string
      example: "attributeID,-createdAt"
responses:
  200:
    description: Attributes retrieved
    content:
      application/json:
        schema:
          type: object
          allOf:
            - $ref: "../../schemas/pagination.yaml"
          properties:
            success:
              type: boolean
              example: true
            attributes:
              type: array
              items:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: string
                    example: ["red", "blue"]
                allOf:
                  - $ref: "../../schemas/products/attribute.yaml"
                  - $ref: "../../schemas/timestamps.yaml"
  400:
    description: Invalid request parameters
    content:
      application/json:
        schema:
          $ref: "../../schemas/error/error400.yaml"
  401:
    description: Token invalid, not authenticated
    content:
      application/json:
        schema:
          $ref: "../../schemas/error/error401.yaml"
  403:
    description: Not an admin
    content:
      application/json:
        schema:
          $ref: "../../schemas/error/error403.yaml"
  500:
    description: Internal Server Error
    content:
      application/json:
        schema:
          $ref: "../../schemas/error/error500.yaml"