# GET /orders
tags:
  - User Orders
summary: Get orders
description: Get all orders belongs to user. <br>
  - The orders will not be shown if it is marked as deleted. <br>
  - Support pagination, filtering, and sorting. <br>
  - Don't support filtering or sorting by nested fields. <br>
security:
  - bearerAuth: []
parameters:
  - name: page
    in: query
    description: Page to retrieve
    required: false
    schema:
      type: integer
      example: 1

  - name: size
    in: query
    description: Size per page
    required: false
    schema:
      type: integer
      example: 10

  - name: sort
    in: query
    description: |
      Sort orders by one or more fields. <br>
      Support fields: subTotal, finalTotal, status, paymentMethod, createdAt, updatedAt. <br>
      For more information, see the [Sorting](http://github.com/Tondeptrai23/e-commerce-api/blob/main/src/v2/document/docs/query.md#sorting).
    required: false
    schema:
      example: "finalTotal,-createdAt"
      oneOf:
        - type: string
        - type: array
  
  - name: subTotal
    in: query
    description: Filter by subTotal <br>
      For more information, see the [Query Number](http://github.com/Tondeptrai23/e-commerce-api/blob/main/src/v2/document/docs/query.md#number-filtering). 
    required: false
    schema:
      example: "[lte]100"

  - name: finalTotal
    in: query
    description: Filter by finalTotal <br>
      For more information, see the [Query Number](http://github.com/Tondeptrai23/e-commerce-api/blob/main/src/v2/document/docs/query.md#number-filtering).
    required: false
    schema:
      example: "[gte]100"

  - name: status
    in: query
    description: Filter by status
    required: false
    schema:
      type: string
      enum: ["pending", "processing", "shipping", "delivered"]
      example: "pending"

  - name: paymentMethod
    in: query
    description: Filter by paymentMethod
    required: false
    schema:
      type: string
      enum: ["cod", "momo", "credit card"]
      example: "cod"

  - name: createdAt
    in: query
    description: Filter by createdAt <br>
      For more information, see the [Query Date](http://github.com/Tondeptrai23/e-commerce-api/blob/main/src/v2/document/docs/query.md#date-filtering).
    required: false
    schema:
      example: "[lte]2024-01-01"

  - name: updatedAt
    in: query
    description: Filter by updatedAt <br>
      For more information, see the [Query Date](http://github.com/Tondeptrai23/e-commerce-api/blob/main/src/v2/document/docs/query.md#date-filtering).
    required: false
    schema:
      example: "[lte]2024-01-01"

responses:
  200:
    description: Orders found
    content:
      application/json:
        schema:
          type: object
          allOf:
            - $ref: "../../../schemas/pagination.yaml"
          properties:
            success:
              type: boolean
              example: true
            orders:
              type: array
              items:
                allOf:
                  - $ref: "../../../schemas/shopping/order.yaml"
                  - $ref: "../../../schemas/timestamps.yaml"
  400:
    description: Invalid query parameters
    content:
      application/json:
        schema:
          $ref: "../../../schemas/error/error400.yaml"
  401:
    description: Token invalid, not authenticated
    content:
      application/json:
        schema:
          $ref: "../../../schemas/error/error401.yaml"
  500:
    description: Internal Server Error
    content:
      application/json:
        schema:
          $ref: "../../../schemas/error/error500.yaml"

