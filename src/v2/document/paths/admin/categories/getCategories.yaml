# GET /admin/categories:
tags:
  - Admin Categories
summary: Get all categories
description: |
  Get all categories. <br>
  Support pagination by page and size. <br>
  Support partial matching filtering by name, parentID, parentName. <br>
  If `sort` is not provided, the default sort is by `createdAt` in descending order. <br>
security:
  - bearerAuth: []
parameters:
  - name: page
    in: query
    description: Page to retrieve
    required: false
    schema:
      type: integer

  - name: size
    in: query
    description: Size each page
    required: false
    schema:
      type: integer

  - name: name
    in: query
    description: Filter by name. <br>
      - Support partial matching using "[like]name"
    required: false
    schema:
      type: string
      pattern: /^(\[like\])?([\w-]+)$/

  - name: parentID
    in: query
    description: Filter by parentID
    required: false
    schema:
      type: string
  
  - name: parentName
    in: query
    description: Filter by parentName. <br>
      - Support partial matching using "[like]parentName"
    required: false
    schema:
      type: string
      pattern: /^(\[like\])?([\w-]+)$/

  - name: createdAt
    in: query
    description: Filter by createdAt. <br> 
      - Support operators <br> 
      + [lte]2024-01-01 <br> 
      + [gte]2024-01-01 <br> 
      + [between]2024-01-01,2022-01-01 <br> 
    required: false
    schema:
      type: string

  - name: updatedAt
    in: query
    description: Filter by updatedAt. <br> 
      - Support operators <br> 
      + [lte]2024-01-01 <br> 
      + [gte]2024-01-01 <br> 
      + [between]2024-01-01,2022-01-01 <br> 
    schema:
      type: string

  - name: sort
    in: query
    description: Sort categories by one or more fields. <br> 
      - A comma-separated list of fields ("name,-createdAt"). <br> 
      - A single field ("name"). <br> - An array of fields (["name", "-createdAt"]). <br>
      - A leading '-' indicates descending order. <br> 
      - Sorting is applied from left to right
    required: false
    schema:
      oneOf:
        - type: string
        - type: array
  
responses:
  200:
    description: Categories found
    content:
      application/json:
        schema:
          type: object
          allOf:
            - $ref: "../../../schemas/pagination.yaml"
          properties:
            success: 
              type: boolean
              example: true
            categories:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '../../../schemas/products/category.yaml'
                  - $ref: '../../../schemas/timestamps.yaml'
  401:
    description: Token invalid, not authenticated
    content:
      application/json:
        schema:
          $ref: '../../../schemas/error/error401.yaml'
  403:
    description: Not an admin
    content:
      application/json:
        schema:
          $ref: '../../../schemas/error/error403.yaml'
  500:
    description: Internal Server Error
    content:
      application/json:
        schema:
          $ref: '../../../schemas/error/error500.yaml'