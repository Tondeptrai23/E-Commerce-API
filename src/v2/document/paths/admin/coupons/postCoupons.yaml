# POST /admin/coupons
tags:
  - Admin Coupons
summary: Create a coupon
description: | 
  Creates a new coupon with the provided data. <br>
  The coupon code must be unique. <br>
  The `maxUsage` field controls the coupon's usage limit: 0 disables the coupon, and null indicates unlimited usage.
security:
  - bearerAuth: []
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        properties:
          code:
            type: string
            example: "10OFF"
          description:
            type: string
            example: "10% off"
          discountValue:
            type: number
            example: 10
          discountType:
            type: string
            enum: ["percentage", "fixed"]
            example: "percentage"
          minimumOrderAmount:
            type: number
            example: 100
          maxUsage:
            type: number
            example: 100
            nullable: true
          target:
            type: string
            enum: ["single", "all"]
            example: "all"
          endDate:
            type: string
            format: date-time
            example: "2022-01-01T00:00:00Z"
            nullable: true
          productIDs:
            type: array
            description: Product IDs that the coupon applies to
            items:
              type: string
            example: ["1", "2"]
            nullable: true
          categories:
            type: array
            description: Category names that the coupon applies to
            items:
              type: string
            example: ["1", "2"]
            nullable: true
responses:
  201:
    description: Coupon created
    content:
      application/json:
        schema:
          type: object
          properties:
            success:
              type: boolean
              example: true
            coupon:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productID:
                        type: string
                        example: "1"
                      name:
                        type: string
                        example: "Product 1"
                categories:
                  $ref: "../../../schemas/products/categoryNames.yaml"
              allOf:
                - $ref: "../../../schemas/shopping/coupon.yaml"
                - $ref: "../../../schemas/timestamps.yaml"
  400:
    description: Invalid request parameters
    content:
      application/json:
        schema:
          $ref: "../../../schemas/error/error400.yaml"
  401:
    description: Token invalid, not authenticated
    content:
      application/json:
        schema:
          $ref: "../../../schemas/error/error401.yaml"
  403:
    description: Not an admin
    content:
      application/json:
        schema:
          $ref: "../../../schemas/error/error403.yaml"
  409:
    description: Coupon code already exists
    content:
      application/json:
        schema:
          $ref: "../../../schemas/error/error409.yaml"
  500:
    description: Internal Server Error
    content:
      application/json:
        schema:
          $ref: "../../../schemas/error/error500.yaml"