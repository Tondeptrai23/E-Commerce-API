# GET /admin/variants
tags:
  - Admin Variants
summary: Get all variants
description: Retrieves detailed information about all variants. <br>
  Supports pagination, sorting, and filtering.
security:
  - bearerAuth: []
parameters:
  - name: page
    in: query
    description: Page to retrieve
    required: false
    schema:
      type: integer
      example: 1

  - name: size
    in: query
    description: Size per page
    required: false
    schema:
      type: integer
      example: 10

  - name: productID
    in: query
    description: Filter by productID. <br> 
      - Support partial matching using "[like]productID"
    required: false
    schema:
      type: string

  - name: createdAt
    in: query
    description: Filter by createdAt. <br> 
      - Support operators <br> 
      + [lte]2024-01-01 <br> 
      + [gte]2024-01-01 <br> 
      + [between]2024-01-01,2022-01-01 <br> 
    required: false
    schema:
      type: string
      example: "[gte]2024-01-01"

  - name: updatedAt
    in: query
    description: Filter by updatedAt. <br> 
      - Support operators [lte], [gte], [between] <br> 
      + [lte]2024-01-01 <br> 
      + [gte]2024-01-01 <br> 
      + [between]2024-01-01,2022-01-01 <br> 
    required: false
    schema:
      type: string
      example: "[lte]2024-01-01"

  - name: price
    in: query
    description: Filter by price. <br>
      - Support operators [lte], [gte], [between]<br>
      + [lte]1000 <br>
      + [gte]1000 <br>
      + [between]1000,2000 <br>
    required: false
    schema:
      type: string
      example: "[lte]1000"

  - name: discountPrice
    in: query
    description: Filter by discountPrice. <br>
      - Support operators [lte], [gte], [between]<br>
      + [lte]1000 <br>
      + [gte]1000 <br>
      + [between]1000,2000 <br>
    required: false
    schema:
      type: string
      example: "[lte]1000"

  - name: sku
    in: query
    description: Filter by sku. <br>
      - Support partial matching using "[like]sku"
    required: false
    schema:
      type: string

  - name: stock
    in: query
    description: Filter by stock. <br>
      - Support operators [lte], [gte], [between]<br>
      + [lte]1000 <br>
      + [gte]1000 <br>
      + [between]1000,2000 <br>
    required: false
    schema:
      type: string
      example: "[lte]1000"

  - name: attributes
    in: query
    description: Filter variants by attributes. <br>
      The `attributes` parameter is a dynamic object where keys represent attribute names and values represent desired attribute values.  <br>
      For example, `attributes={"color":"red","size":"M"}` will return a variant having both the color "red" and size "M".  <br>
      Note that `size="M,L"` is different from `size=["M","L"]`. <br>
        - The former filters for variants with either size M or L, while the latter filters for variants with both sizes (which is typically impossible).
    required: false
    style: deepObject
    schema:
      type: object
      description: Dynamic attributes of the product
      properties:
        color:
          example: "red"
        size:
          example: "M,L"

  - name: sort
    in: query
    description: Sort variants by one or more fields. <br> 
      Specify fields in a comma-separated string ("price,-discountPrice"), as a single string ("price"), or as an array of strings (["price", "-discountPrice"]). <br>
      A leading '-' indicates descending order. Sorting is applied from left to right.
    required: false
    schema:
      oneOf:
        - type: string
        - type: array
responses:
  200:
    description: Variants found
    content:
      application/json:
        schema:
          type: object
          allOf:
            - $ref: "../../schemas/pagination.yaml"
          properties:
            success:
              type: boolean
              example: true
            variants:
              type: array
              items:
                type: object
                allOf:
                  - $ref: "../../schemas/products/variant.yaml"
                  - $ref: "../../schemas/timestamps.yaml"
                  - $ref: "../../schemas/products/variantAttribute.yaml"
  400:
    description: Invalid query parameters
    content:
      application/json:
        schema:
          $ref: "../../schemas/error/error400.yaml"

  401:
    description: Token error, not authenticated
    content:
      application/json:
        schema:
          $ref: "../../schemas/error/error401.yaml"

  403:
    description: Not an admin
    content:
      application/json:
        schema:
          $ref: "../../schemas/error/error403.yaml"

  500:
    description: Internal Server Error
    content:
      application/json:
        schema:
          $ref: "../../schemas/error/error500.yaml"




