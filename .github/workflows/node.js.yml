# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.*]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        services:
            mysql:
                image: mysql:8.0
                env:
                    # The MySQL docker container requires these environment variables to be set
                    # so we can create and migrate the test database.
                    # See: https://hub.docker.com/_/mysql
                    MYSQL_DATABASE: ${{secrets.DB_NAME}}
                    MYSQL_ROOT_PASSWORD: ${{secrets.DB_PASSWORD}}
                ports:
                    # Opens port 3306 on service container and host
                    # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
                    - 3306:3306
                    # Before continuing, verify the mysql container is reachable from the ubuntu host
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm ci
            - run: npm test
              env:
                  DB_HOST: 127.0.0.1
                  DB_USERNAME: ${{secrets.DB_USERNAME}}
                  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
                  DB_PORT: 3306
                  DB_NAME: ${{secrets.DB_NAME}}
